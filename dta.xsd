<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="tournament">
		<xs:annotation>
			<xs:documentation>Tournaments are the core of the data collected as part of debates.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="round">
					<xs:annotation>
						<xs:documentation>A round is a collection of debates, which may have similarities in time or stage in the tournament.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="debate">
								<xs:annotation>
									<xs:documentation>Debates are collections of speeches between competitors which are compared to form a score/result. Byes are represented by having only one side to a debate.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="side">
											<xs:annotation>
												<xs:documentation>Opposing speeches are often grouped as sides to a debate, with each team representing a position.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="ballot">
														<xs:annotation>
															<xs:documentation>A ballot is an atomic score/result given by adjudicators towards a team or speaker and not the collection of scores by the same adjudicator. The score, or whether the team advanced (true/false), should be its content. Win or lose should be determined by comparing the rank or the score of all sides of the debate.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="adjudicators" type="xs:IDREFS"/>
															<xs:attribute default="false" name="minority" type="xs:boolean"/>
															<xs:attribute name="rank" type="xs:integer" use="optional"/>
															<xs:attribute default="false" name="ignored" type="xs:boolean" use="optional"/>
														</xs:complexType>
														<xs:keyref name="team_ballot_adjudicators" refer="adjudicator_id">
															<xs:selector xpath="side/ballot"/>
															<xs:field xpath="@adjudicators"/>
														</xs:keyref>
													</xs:element>
													<xs:element name="speech">
														<xs:annotation>
															<xs:documentation>Each debate is comprised of speeches by members of each opposing team. These speeches may be scores individually or grouped by team. As each speech has a speaker, the team (if any) can be inferred.

Duplicate speeches (iron-man) should show as a separate speech.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="ballot">
																	<xs:annotation>
																		<xs:documentation>A ballot is an atomic score/result given by adjudicators towards a team or speaker and not the collection of scores by the same adjudicator. The score should be its content, with criteria if applicable.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="score">
																				<xs:annotation>
																					<xs:documentation>One of the scores given for the speech in relation to a marking rubric. The score is the content.</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="criterion" type="xs:string"/>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																		<xs:attribute name="adjudicators" type="xs:IDREFS"/>
																		<xs:attribute name="rank" type="xs:integer" use="optional"/>
																	</xs:complexType>
																	<xs:keyref name="speech_ballot_adjudicators" refer="adjudicator_id">
																		<xs:selector xpath="speech/ballot"/>
																		<xs:field xpath="@adjudicators"/>
																	</xs:keyref>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="speaker" type="xs:IDREF"/>
															<xs:attribute name="reply" type="xs:boolean"/>
														</xs:complexType>
														<xs:keyref name="speech_speaker" refer="speaker_id">
															<xs:selector xpath="speech"/>
															<xs:field xpath="@speaker"/>
														</xs:keyref>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="team" type="xs:IDREF"/>
												<xs:attribute name="forfeit" type="xs:boolean" use="optional" default="false"/>
											</xs:complexType>
											<xs:keyref name="side_team" refer="team_id">
												<xs:selector xpath="side"/>
												<xs:field xpath="@team"/>
											</xs:keyref>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="id" type="xs:ID"/>
									<xs:attribute name="chair" type="xs:IDREF" use="optional"/>
									<xs:attribute name="venue" type="xs:IDREF" use="optional"/>
									<xs:attribute name="motion" type="xs:IDREF"/>
									<xs:attribute name="adjudicators" type="xs:IDREFS"/>
								</xs:complexType>
								<xs:key name="debate_id">
									<xs:selector xpath="debate"/>
									<xs:field xpath="@id"/>
								</xs:key>
								<xs:keyref name="debate_chair_adjudicator" refer="adjudicator_id">
									<xs:selector xpath="debate"/>
									<xs:field xpath="@chair"/>
								</xs:keyref>
								<xs:keyref name="debate_venue" refer="venue_id">
									<xs:selector xpath="debate"/>
									<xs:field xpath="@venue"/>
								</xs:keyref>
								<xs:keyref name="debate_motion" refer="motion_id">
									<xs:selector xpath="debate"/>
									<xs:field xpath="@motion"/>
								</xs:keyref>
								<xs:keyref name="debate_adjudicators" refer="adjudicator_id">
									<xs:selector xpath="debate"/>
									<xs:field xpath="@adjudicators"/>
								</xs:keyref>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="name" type="xs:string"/>
						<xs:attribute default="false" name="elimination" type="xs:boolean"/>
						<xs:attribute name="feedback-weight" type="xs:float" use="optional"/>
						<xs:attribute name="break-category" type="xs:IDREF" use="optional"/>
						<xs:attribute name="start" type="xs:time" use="optional"/>
					</xs:complexType>
					<xs:keyref name="round_break_category" refer="break_category_id">
						<xs:selector xpath="round"/>
						<xs:field xpath="@break-category"/>
					</xs:keyref>
				</xs:element>
				<xs:element name="participants">
					<xs:annotation>
						<xs:documentation>Container element for competitive participants for clarity of the contents of the parent element.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="team">
								<xs:annotation>
									<xs:documentation>Teams are groups of speakers normally associated with a specific institution. In addition to ranking team members, teams are also ranked, which may determine eligibility in elimination rounds.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="speaker">
											<xs:annotation>
												<xs:documentation>Speakers are represented without anything tournament-specific, but are most-often grouped as teams. If teams are non-existant, they may be declared outside the tournament-type. Their name should be the content of the element.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="id" type="xs:ID"/>
												<xs:attribute name="gender" type="xs:string" use="optional"/>
												<xs:attribute name="institutions" type="xs:IDREFS"/>
												<xs:attribute name="categories" type="xs:IDREFS"/>
											</xs:complexType>
											<xs:key name="speaker_id">
												<xs:selector xpath="speaker"/>
												<xs:field xpath="@id"/>
											</xs:key>
											<xs:keyref name="speaker_institution" refer="institution_id">
												<xs:selector xpath="speaker"/>
												<xs:field xpath="@institution"/>
											</xs:keyref>
											<xs:keyref name="speaker_categories" refer="speaker_category_id">
												<xs:selector xpath="speaker"/>
												<xs:field xpath="@categories"/>
											</xs:keyref>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="id" type="xs:ID"/>
									<xs:attribute name="code" type="xs:string"/>
									<xs:attribute name="name" type="xs:string"/>
									<xs:attribute name="break-eligibilities" type="xs:IDREFS"/>
								</xs:complexType>
								<xs:key name="team_id">
									<xs:selector xpath="team"/>
									<xs:field xpath="@id"/>
								</xs:key>
								<xs:keyref name="team_break_categories" refer="break_category_id">
									<xs:selector xpath="team"/>
									<xs:field xpath="@break-eligibilities"/>
								</xs:keyref>
							</xs:element>
							<xs:element name="adjudicator">
								<xs:annotation>
									<xs:documentation>While an adjudicator can participate in many tournaments, their status (as indpendent, core, etc.) can vary, and so they must stay attached.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="feedback">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="answer">
														<xs:annotation>
															<xs:documentation>The content should be the answer given.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="question" type="xs:IDREF"/>
														</xs:complexType>
														<xs:keyref name="answer_question" refer="question_id">
															<xs:selector xpath="answer"/>
															<xs:field xpath="@question"/>
														</xs:keyref>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="source-team" type="xs:IDREF" use="optional"/>
												<xs:attribute name="source-adjudicator" type="xs:IDREF" use="optional"/>
												<xs:attribute name="debate" type="xs:IDREF"/>
												<xs:attribute name="score" type="xs:decimal"/>
											</xs:complexType>
											<xs:keyref name="feedback_source_team" refer="team_id">
												<xs:selector xpath="feedback"/>
												<xs:field xpath="@source-team"/>
											</xs:keyref>
											<xs:keyref name="feedback_source_adj" refer="adjudicator_id">
												<xs:selector xpath="feedback"/>
												<xs:field xpath="@source-adjudicator"/>
											</xs:keyref>
											<xs:keyref name="feedback_debate" refer="debate_id">
												<xs:selector xpath="feedback"/>
												<xs:field xpath="@debate"/>
											</xs:keyref>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="gender" type="xs:string" use="optional"/>
									<xs:attribute name="id" type="xs:ID"/>
									<xs:attribute name="name" type="xs:string"/>
									<xs:attribute name="core" type="xs:boolean"/>
									<xs:attribute name="independent" type="xs:boolean"/>
									<xs:attribute default="0.0" name="score" type="xs:float" use="optional"/>
									<xs:attribute name="institutions" type="xs:IDREFS"/>
								</xs:complexType>
								<xs:key name="adjudicator_id">
									<xs:selector xpath="adjudicator"/>
									<xs:field xpath="@id"/>
								</xs:key>
								<xs:keyref name="adjudicator_institutions" refer="institution_id">
									<xs:selector xpath="adjudicator"/>
									<xs:field xpath="@institutions"/>
								</xs:keyref>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="institution">
					<xs:annotation>
						<xs:documentation>Institutions represent collections of individuals with a shared debating history. This means that members are more familiar with each-other and so judging within is to be avoided. All participants may have affiliations, and teams may be categorized by their institution. Its name should be the content.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:ID"/>
						<xs:attribute name="reference" type="xs:string"/>
					</xs:complexType>
					<xs:key name="institution_id">
						<xs:selector xpath="institution"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
				<xs:element name="motion">
					<xs:annotation>
						<xs:documentation>Motions are not exclusive to a tournament, and so have been set apart. Rounds and debates may reference them. The resolution should be the non-element content of the tag.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="info-slide" type="xs:string"/>
						</xs:sequence>
						<xs:attribute name="id" type="xs:ID" use="required"/>
						<xs:attribute name="reference"/>
						<xs:attribute name="language" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>The language(s) of the motion/the debates using the motion. Use ISO 639 codes, separated by whitespace.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
					<xs:key name="motion_id">
						<xs:selector xpath="motion"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
				<xs:element name="venue">
					<xs:annotation>
						<xs:documentation>Venues are where debates may take place. Specific attributes that a venue has should be added as a venue-category and referenced. Its name, excluding category suffixes, should be the content.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:ID" use="required"/>
						<xs:attribute name="categories" use="optional">
							<xs:annotation>
								<xs:documentation>Venue categories are a simple reference element to designate venues with a similarity, such as being easily accessible.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="score" type="xs:float" use="optional"/>
					</xs:complexType>
					<xs:key name="venue_id">
						<xs:selector xpath="venue"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
				<xs:element name="question">
					<xs:annotation>
						<xs:documentation>A question posed to participant(s) of each debate on an adjudicator. The text of the question should be its content.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:ID"/>
						<xs:attribute name="name" type="xs:string"/>
						<xs:attribute name="type" type="xs:string">
							<xs:annotation>
								<xs:documentation>Type can be one of the following: bc for checkbox, bs for yes/no (dropdown), i for integer (textbox), is for integer scale, f for float, t for text, tl for long text, ss for select one, ms for select multiple</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="from-teams" type="xs:boolean"/>
						<xs:attribute name="from-adjudicators" type="xs:boolean"/>
						<xs:attribute name="choices" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>Separate using pipes (&quot;|&quot;). Only use if type is of a choice.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
					<xs:key name="question_id">
						<xs:selector xpath="question"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
				<xs:element name="break-category">
					<xs:annotation>
						<xs:documentation>A break category. Its name should be the content.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="id" type="xs:ID"/>
						<xs:attribute name="priority" type="xs:decimal"/>
					</xs:complexType>
					<xs:key name="break_category_id">
						<xs:selector xpath="break-category"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
				<xs:element name="speaker-category">
					<xs:complexType>
						<xs:attribute name="id" type="xs:ID"/>
					</xs:complexType>
					<xs:key name="speaker_category_id">
						<xs:selector xpath="speaker-category"/>
						<xs:field xpath="@id"/>
					</xs:key>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string"/>
			<xs:attribute name="short" type="xs:string" use="optional"/>
			<xs:attribute name="host" type="xs:string" use="optional"/>
			<xs:attribute name="style" type="xs:string" use="optional"/>
			<xs:attribute name="language" type="xs:string" use="optional"/>
			<xs:attribute name="start-date" type="xs:date" use="optional"/>
			<xs:attribute name="end-date" type="xs:date" use="optional"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
